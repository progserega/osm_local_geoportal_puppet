#!/bin/bash

export LANG="ru_RU.UTF-8"
export LC_ALL="ru_RU.UTF-8"

#email_csv_to="shupta@rsprim.ru,semenov@rsprim.ru,dolganin@prim.drsk.ru,lipovskiy@prim.drsk.ru,nikolaev@rsprim.ru"
# Если пустой список получателей, то не отправляем csv:
email_csv_to="<%= @email_csv_to %>"
email_osm_to="<%= @email_osm_to %>"
email_admin="<%= @email_admin %>"

system_email_from="<%= @email_import %>"

Manual_GPS_DRSK="<%= @manual_path %>"
lines_and_stations_list="<%= @list_of_lines_path %>"

gpx_store="<%= @gpx_store_path %>"

check_file_name="<%= @base_dir %>/osm_check_gpx_file_name.sh"
email_server="<%= @email_server %>"
log="<%= @log_path %>/osm_import_from_mail.log"
csv2osm_error_log="<%= @log_path %>/csv2osm_error_log.log"
points_stat="<%= @points_stat_path %>"

maildir_base="<%= @maildir_base %>"
maildir="<%= @maildir %>"
backup_maildir="<%= @backup_maildir %>"
error_maildir="<%= @error_maildir %>"
tmpdir="<%= @tmpdir %>"
nash="НЕ наш коллега"

# utils:
gpx2csv="<%= @bin_path %>/gpx2csv"
csv2osm="<%= @bin_path %>/csv2osm"
ripmime="<%= @bin_path %>/ripmime"

getmail_config_dir="<%= @base_dir %>/.getmail/"
getmail_rcfile="${getmail_config_dir}/getmailrc"

echo "`date +%Y.%m.%d-%T`: ========================== Запуск $0 =========================" >> ${log}
echo "`date +%Y.%m.%d-%T`: Получаем почту" >> ${log}
getmail --getmaildir "${getmail_config_dir}" -r "${getmail_rcfile}" -v &>> ${log}

echo "`date +%Y.%m.%d-%T`: Обрабатываем новые письма (всего новых писем: `find ${maildir} -type f |wc -l`)" >> ${log}

cd ${maildir}
for mail in `ls`
do
	# Очищаем временную директорию:
	rm -rf ${tmpdir}
	mkdir ${tmpdir}

	#email_from="`grep -i 'from:' ${mail}|sed 's/^.rom: //'`"
	#email_from="`grep -i 'from:' ${mail}|sed 's/^.*</</'`"
	email_from="`egrep -i '^from:' ${mail}|sed 's/^.*</</'|head -n 1`"
	# Проверка на глючный from:
	if [ -z "`echo ${email_from}|grep '@'`" ]
	then
		# From: не содержит обратного адреса (да, и такое бывает), берём его из envelop-from:
		email_from="`egrep -i envelope-from ${mail}|grep '@'|tail -n 1|sed 's/.*<//;s/>.*//'`"
	fi

	# Проверка на зацикленность:
	if [ ! -z `echo ${email_from}|grep "${system_email_from}"` ]
	then
		echo "`date +%Y.%m.%d-%T`: Получили письмо от ${system_email_from} - т.е. от нас самих. Это недопустимо, т.к. может привести к зацикленности - отправки уведомлений самим себе, отправки уведомлений на уведомления и т.д. Пропускаем сообщение: ${mail}" >> ${log}
		
		# Перемещаем письмо в ошибки:
		cd ${maildir}
		echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
		mv ${mail} ${error_maildir} -v &>> ${log}

		# Отправляем админу уведомление об ошибке обработки:
		echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_admin}, Тема письма: 'ВНИМАНИЕ!!! ошибка обработки отправителя GPS-данных!" >> ${log}
		sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ВНИМАНИЕ!!! ошибка обработки отправителя GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
Получено письмо с обратным адресом ${system_email_from}. Отправка ему ответов приведёт к зацикленности системы. Просьба проверить. 
Письмо ${mail} перемещено в ${error_maildir}
Файлы вложения письма:
`ls -1 ${tmpdir}`

Отправителю ничего в ответ не отправлял, чтобы не было зацикленности. 
Просьба обратить внимание на данный сбой!

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}

		continue
	fi

	# Проверка на зацикленность через сообщения сервера:
	if [ ! -z `echo ${email_from}|grep "Mailer-Daemon@pamir.ues.int"` ]
	then
		echo "`date +%Y.%m.%d-%T`: Получили письмо от Mailer-Daemon@pamir.ues.int - т.е. от сервера. Неверно отправляеть ему ответ, т.к. может привести к зацикленности - отправки уведомлений самим себе, отправки уведомлений на уведомления и т.д. Пропускаем сообщение: ${mail}" >> ${log}
		
		# Перемещаем письмо в ошибки:
		cd ${maildir}
		echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
		mv ${mail} ${error_maildir} -v &>> ${log}

		# Отправляем админу уведомление об ошибке обработки:
		echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_admin}, Тема письма: 'ВНИМАНИЕ!!! ошибка обработки отправителя GPS-данных!" >> ${log}
		sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ВНИМАНИЕ!!! ошибка обработки отправителя GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
Получено письмо с обратным адресом Mailer-Daemon@pamir.ues.int. Отправка ему ответов приведёт к зацикленности системы. Просьба проверить. 
Письмо ${mail} перемещено в ${error_maildir}
Файлы вложения письма:
`ls -1 ${tmpdir}`

Отправителю ничего в ответ не отправлял, чтобы не было зацикленности. 
Просьба обратить внимание на данный сбой!

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}

		continue
	fi

	codepage="utf8"
	echo "`date +%Y.%m.%d-%T`: обрабатываем ${mail}" >> ${log}
	echo "`date +%Y.%m.%d-%T`: Сохраняем вложения:" >> ${log}
	"${ripmime}" -i ${mail} -d ${tmpdir} &>> ${log}

	# Получаем кодировку имён вложений:
	if [ 0 -lt "`grep filename ${mail}|grep -i koi8|wc -l`" ]
	then
		codepage="koi8-r"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}
	elif [ 0 -lt "`grep ".gpx" ${mail}|grep -i koi8|wc -l`" ]
	then
		codepage="koi8-r"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}
	elif [ 0 -lt "`grep filename ${mail}|grep 1251|wc -l`" ]
	then
		codepage="cp1251"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}
	elif [ 0 -lt "`grep ".gpx" ${mail}|grep 1251|wc -l`" ]
	then
		codepage="cp1251"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}

	# Анализ на вложение от Outlook (с переносом строк между параметрами и значениями их)
	elif [ 0 -lt "`cat ${mail}|tr '\n' ' '|sed 's/.*filename=/filename=/g' |awk '{print $1}' FS=';'|grep 1251|wc -l`" ]
	then
		codepage="cp1251"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}
	elif [ 0 -lt "`cat ${mail}|tr '\n' ' '|sed 's/.*filename=/filename=/g' |awk '{print $1}' FS=';'|grep koi8-r|wc -l`" ]
	then
		codepage="koi8-r"
		echo "`date +%Y.%m.%d-%T`: Устанавливаем кодировку имени вложения в ${codepage}" >> ${log}
	fi

	echo "`date +%Y.%m.%d-%T`: Кодировка имени вложения: ${codepage}" >> ${log}
	# Переконвертируем имена вложений:
	find ${tmpdir} -type f -exec convmv --nosmart --notest -f ${codepage} -t utf8 {} \;

	cd ${tmpdir}

	if [ 0 == `file -b --mime-type *|grep 'application/xml'|wc -l` ]
	then
		# Во вложении нет xml-файлов!
		echo "`date +%Y.%m.%d-%T`: ERROR: в письме от ${email_from} нет xml-файлов (gpx)!" >> ${log}

		# Письмо пользователю:
		# Проверяем получателя, что он локальный:
		if [ -z "`echo ${email_from}|grep 'rsprim.ru\|drsk.ru'`" ]
		then
			# Не наш человек:
			echo "`date +%Y.%m.%d-%T`: НЕ НАШ пользователь с обратным адресом: ${email_from} отправил к нам письмо без xml-файлов. Отправляем ему краткий ответ." >> ${log}
			sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from}. Письмо должно содержать GPS-данные
в правильном формате. Их нет во вложении. 
Пожалуйста, запросите инструкцию о правильном оформлении данных у своего начальства.
" &>> ${log}
		else
			# Наш человек:
			nash="НАШ коллега"
			echo "`date +%Y.%m.%d-%T`: НАШ пользователь с обратным адресом: ${email_from} отправил к нам письмо без xml-файлов. Отправляем ему полный ответ." >> ${log}
			sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -a "${Manual_GPS_DRSK}" -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from}. Письмо должно содержать GPS-данные
в XML-формате. Краткая инструкция описана в письме, полная - в файле вложении этого письма.
Если же вы делаете всё правильно, но система не принимает этот файл - обратитесь по адресу:
semenov@rsprim.ru

Справка:
GPS-данные представляют из себя XML gpx-файлы, взятые из GPS-прибора, с именем, 
сформированным по особому правилу:
'имя_линии_из_списка номера_опор подчерк тип_данных.gpx'
Где тип_данных - это:
	line - для линий эл. передачи (значит файл содержит координаты опор линии)
	station - для подстанции (значит файл содержит координаты подстанции)
	substation - для ТП (значит файл содержит координаты ТП)
Номера_опор - это номера через тире (только для линий эл. передачи).

Например, вы собрали координаты опор с 1-й по 45-ю линии 'ВЛ 35 Чугуевка - Соколовка',
тогда файл, в котором лежат эти координаты должен называться:
'ВЛ 35 Чугуевка - Соколовка 1-45_line.gpx'

Или вы собрали координаты подстанции 'ПС 35/6 Северная'. Но т.к. Windows не позволяет 
в имя файла добавлять символы ':/|\?*' и т.п., то такие символы заменяем на символ '_'.
Итого, формируем имя файла:
'ПС 35_6 Северная_station.gpx'

Такие 'сложности' необходимы для того, чтобы исключить огромную и кропотливую ручную
работу по добавлению этих данных в базы данных. Вместо этого большую часть работы делает
программа, которой нужно 'немножко подсказать', что это за данные.

На всякий случай, во вложении этого письма содержится инструкция - как правильно оформлять 
GPS-данные и как работать с навигаторами.

Так же, ниже перечислен список имён подстанций и ВЛ, которые ожидает получить программа.
Т.е. имена gpx-файлов должны содержать ТОЛЬКО имена ВЛ или подстанций из этого списка, 
иначе письмо обработано не будет.
Вопросы по этому списку можно задать по адресу: semenov@rsprim.ru или по abuse@rsprim.ru

Список разрешённых имён ВЛ и подстанций:
`cat ${lines_and_stations_list}`

" &>> ${log}
		fi
	
		
		# Перемещаем письмо в ошибки:
		cd ${maildir}
		echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
		mv ${mail} ${error_maildir} -v &>> ${log}

		# Отправляем админу уведомление об ошибке обработки:
		echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_admin}, Тема письма: 'ОШИБКА присланных GPS-данных!'" >> ${log}
		sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА присланных GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
В присланном от ${email_from} письме НЕ содержится gpx-файла с XML данными.
Файлы вложения:
`ls -1 ${tmpdir}`

Т.к. судя по адресу отправителя, это ${nash}, то отправили ему подобающий его статусу отчёт об ошибке 
(полный - со списком линий и подстанций и инструкцией по сбору GPS-данных, для наших коллег 
и не полный отчёт - для не наших коллег). 
Присланное письмо переместил в директорию писем с ошибками: 
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}

		# Отправляем пользователю уведомление об ошибке обработки:
		echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_admin}, Тема письма: 'ОШИБКА присланных GPS-данных!'" >> ${log}
		sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_from} -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА присланных GPS-данных!'|base64 -w 0`?=" \
 -m "Письмо автоматически сгенерировано системой.
В присланном от ${email_from} письме НЕ содержится gpx-файла с XML данными.
Файлы вложения:
`ls -1 ${tmpdir}`

Т.к. судя по адресу отправителя, это ${nash}, то отправили ему подобающий его статусу отчёт об ошибке 
(полный - со списком линий и подстанций и инструкцией по сбору GPS-данных, для наших коллег 
и не полный отчёт - для не наших коллег). 
Присланное письмо переместил в директорию писем с ошибками: 
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}

		continue
	fi

	echo "`date +%Y.%m.%d-%T`: Количество xml-файлов, полученных в письме ${mail}: `file -b --mime-type *|grep 'application/xml'|wc -l`" >> ${log}
	echo "`date +%Y.%m.%d-%T`: Список xml-файлов, полученных в письме ${mail}: " >> ${log}
	echo "`file --mime-type *|grep 'application/xml'`" >> ${log}

	# Отправляем уведомление пользователю о получении от него почты:
	echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_from}, Тема: 'Письмо с GPS-данными от Вас принято'" >> ${log}
	sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -s ${email_server} -u "=?utf-8?b?`echo 'Письмо с GPS-данными от Вас принято'|base64 -w 0`?=" \
	-m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from} С GPS-данными.

Письмо с файлами вложения:
`ls -1 ${tmpdir}`
успешно от Вас  принято и начата его обработка.

Спасибо!
" &>> ${log}

	nash="НЕ наш коллега"
	# Обработка полученных gpx-файлов:
	# Просматриваем все файлы, т.к. из-за кривой работы ripmime имя файла может обрезаться:
	for gpx in *
	do
		cd ${tmpdir}
		echo "`date +%Y.%m.%d-%T`: обрабатываем файл '${gpx}'" >> ${log}
		# Обрбатываем только XML-вложения:
		if [ -z `file -b --mime-type "${gpx}"|grep 'application/xml'` ]
		then
			echo "`date +%Y.%m.%d-%T`: файл ${gpx} не является файлом XML - пропускаю." >> ${log}
			continue
		fi
		# Проверяем имя файла на соответствие правилам именования gpx-файлов:
		${check_file_name} "${gpx}"
		if [ ! 0 -eq $? ]
		then
			echo "`date +%Y.%m.%d-%T`: скрипт '${check_file_name}' сообщает, что имя файла '${gpx}' не соответствует правилу именования." >> ${log}
			# Проверяем получателя, что он локальный:
			if [ -z "`echo ${email_from}|grep 'rsprim.ru\|drsk.ru'`" ]
			then
				# Не наш человек:
				echo "`date +%Y.%m.%d-%T`: НЕ НАШ пользователь с обратным адресом: ${email_from} отправил к нам письмо с xml-файлами, неверно сформированными. Отправляем ему краткий ответ." >> ${log}
				sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки GPS-данных!'|base64 -w 0`?=" \
		-m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from}. Письмо должно содержать GPS-данные.
Их нет во вложении. Или же имя файла вложения содержит недопустимое название.
Пожалуйста, запросите инструкцию о правильном оформлении данных у своего начальства.
" &>> ${log}
			else
				# Наш человек:
				nash="НАШ коллега"
				echo "`date +%Y.%m.%d-%T`: НАШ пользователь с обратным адресом: ${email_from} отправил к нам письмо с xml-файлами, неверно сформированными. Отправляем ему полный ответ." >> ${log}
				subj="ОШИБКА при обработке ВАШИХ данных: ${gpx}.  GPS-данные не приняты!"
				sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -a "${Manual_GPS_DRSK}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
		-m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from}. Письмо должно содержать GPS-данные.
При обработке файла вложения '${gpx}' возникли ошибки, т.к. имя этого файла,
к сожалению, сформировано неверно. Пожалуйста, переименуйте файл '${gpx} в соответсвии
с правилами, описанными ниже и отправьте один этот файл ещё раз.
Если же вы делаете всё правильно, но система не принимает этот файл - обратитесь по адресу:
semenov@rsprim.ru

Справка:
GPS-данные представляют из себя gpx-файлы, с именем, сформированным по особому правилу:
'имя_линии_из_списка номера_опор подчерк тип_данных.gpx'
Где тип_данных - это:
	line - для линий эл. передачи (значит файл содержит координаты опор линии)
	station - для подстанции (значит файл содержит координаты подстанции)
	substation - для ТП (значит файл содержит координаты ТП)
Номера_опор - это номера через тире (только для линий эл. передачи).

Например, вы собрали координаты опор с 1-й по 45-ю линии 'ВЛ 35 Чугуевка - Соколовка',
тогда файл, в котором лежат эти координаты должен называться:
'ВЛ 35 Чугуевка - Соколовка 1-45_line.gpx'

Или вы собрали координаты подстанции 'ПС 35/6 Северная'. Но т.к. Windows не позволяет 
в имя файла добавлять символы ':/|\?*' и т.п., то такие символы заменяем на символ '_'.
Итого, формируем имя файла:
'ПС 35_6 Северная_station.gpx'

Такие 'сложности' необходимы для того, чтобы исключить огромную и кропотливую ручную
работу по добавлению этих данных в базы данных. Вместо этого большую часть работы делает
программа, которой нужно 'немножко подсказать', что это за данные.

На всякий случай, во вложении этого письма содержится инструкция - как правильно оформлять 
GPS-данные и как работать с навигаторами.

Так же, ниже перечислен список имён подстанций и ВЛ, которые ожидает получить программа.
Т.е. имена gpx-файлов должны содержать ТОЛЬКО имена ВЛ или подстанций из этого списка, 
иначе письмо обработано не будет.
Вопросы по этому списку можно задать по адресу: semenov@rsprim.ru или по abuse@rsprim.ru

Список разрешённых имён ВЛ и подстанций:
`cat ${lines_and_stations_list}`

" &>> ${log}
			
			fi
			# Перемещаем письмо в ошибки:
			cd ${maildir}
			echo "`date +%Y.%m.%d-%T`: Перемещаем письмо '${mail}' в директорию с ошибками:" >> ${log}
			mv ${mail} ${error_maildir} -v &>> ${log}
			# Отправляем админу уведомление об ошибке обработки:
			subj="ОШИБКА присланных GPS-данных: ${gpx}!"
			sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
В присланном от ${email_from} письме содержится gpx-файл с неверным именем: ${gpx}
Т.к. судя по адресу отправителя, это ${nash}, то отправили ему подобающий его статусу отчёт об ошибке 
(полный - со списком линий и подстанций и инструкцией по сбору GPS-данных, для наших коллег 
и не полный отчёт - для не наших коллег). 
Присланное письмо переместил в директорию писем с ошибками: 
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}
			# Обрабатываю следующий gpx-файл
			continue
		fi

		# Конвертируем в csv и отправляем на почту:
		echo "`date +%Y.%m.%d-%T`: Конвертируем ${gpx} -> ${gpx}.csv" >> ${log}
		"${gpx2csv}" "${gpx}" > "${gpx}.csv"

		if [ ! 0 -eq $? ]
		then
			# Ошибка конвертера!
			echo "`date +%Y.%m.%d-%T`: ERROR: ошибка конвертирования файла '${gpx}' с помощью gpx2csv. Перемещаю исходное письмо в директорию ${error_maildir}." >> ${log}

			# Перемещаем письмо в ошибки:
			cd ${maildir}
			echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
			mv ${mail} ${error_maildir} -v &>> ${log}
			
			# Отправляем админу уведомление об ошибке обработки:
			subj="ОШИБКА конвертирования файла '${gpx}' с помощью gpx2csv !"
			base64_name="=?utf-8?b?`echo ${gpx}|base64 -w 0`?="
			/scripts/gps/sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -a "${gpx}" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Скрипт не смог сконвертировать gpx-файл ${gpx} в csv-файл ${gpx}.csv с помощью ${gpx2csv}
Ошибка системы. Письмо с данными переместил в директорию с ошибками:
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Файл gpx, который не смог сконвертировать скрипт находится во вложении.

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}
			
			# Отправляем пользователю уведомление об ошибке обработки:
			subj="ОШИБКА обработки файла '${gpx}'!"
			base64_name="=?utf-8?b?`echo ${gpx}|base64 -w 0`?="
			/scripts/gps/sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_from} -a "${gpx}" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Система не смогла обработать gpx-файл ${gpx}. Скорее всего файл некорректен. Проверьте, открывается ли он в qlandkartegt:
Скачать можно тут: https://bitbucket.org/kiozen/qlandkarte-gt/downloads
Если не открывается - исправьте файл gpx и после успешного открытия в qlandkartegt отправьте его повторно.

Возможно это ошибка системы. Системные администраторы УЖЕ уведомлены.
" &>> ${log}

			continue
		fi
		if [ ! -z "${email_csv_to}" ]
		then
				# Отправляем каждый csv файлы во вложении письма:
				# По поводу кодировки в теме письма и в отправителе смотреть тут: http://webmasterschool.ru/articles/article59.php
				base64_name="=?utf-8?b?`echo ${gpx}.csv|base64 -w 0`?="
				echo "`date +%Y.%m.%d-%T`: base64_name=${base64_name}" >> ${log}
				subj="Данные для EXEL. На основе: ${gpx}. Сконвертированные GPS/ГЛОНАСС точки опор и подстанций в формате csv"

				# Патченный sendEmail -o tls=no (для обхода бага именами вложений в utf8):
				echo "`date +%Y.%m.%d-%T`: /scripts/gps/sendEmail -o tls=no -f ${email_from} -t ${email_csv_to} -a ${gpx}.csv, Тема: ${subj}" >> ${log}
				/scripts/gps/sendEmail -o tls=no -f "${email_from}" -o message-charset=utf-8 -t "${email_csv_to}" -a "${gpx}.csv" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
		-m "Письмо автоматически сгенерировано скриптом $0 на хосте `hostname`.
Во вложении находятся csv-файл, содержащий таблицу с координатами опор и подстанций. 
Данный файл открывается в localc, oocalc, exel через импорт - кодировка utf8, разделитель ';'.

Изначальные данные были получены в формате gpx по почте от ${email_from}
		" &>> ${log}

				if [[ 0 != "$?" ]]
				then
					echo "`date +%Y.%m.%d-%T`: ERROR: письмо с csv-файлами не смог отправить получателю ${email_from}. Перемещаю исходное письмо в директорию ${error_maildir}." >> ${log}

					# Перемещаем письмо в ошибки:
					cd ${maildir}
					echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
					mv ${mail} ${error_maildir} -v &>> ${log}
					
					# Отправляем админу уведомление об ошибке обработки:
					sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки CSV-данных!'|base64 -w 0`?=" \
					-m "Письмо автоматически сгенерировано системой.
Скрипт не смог отправить письмо с csv-файлом: ${gpx}.csv пользователю(ям): ${email_csv_to}
Ошибка системы. Письмо с данными переместил в директорию с ошибками:
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
		`tail -n 30 ${log}`
		" &>> ${log}
					continue
				fi
		fi

		# Подсчитываем количество точек:
		cur_num=`cat "${gpx}.csv"|wc -l`
		old_num=`cat ${points_stat}`
		expr ${cur_num} + ${old_num} > ${points_stat}

		# Сохраняем все *.gpx в директорию ${gpx_store}
		echo "`date +%Y.%m.%d-%T`: Сохраняем gpx в хранилище ${gpx_store}/${mail}/ (на всякий случай)" >> ${log}
		mkdir "${gpx_store}/${mail}"
		cp "${gpx}" "${gpx_store}/${mail}/" -v &>> ${log}


		# Дополнительные действия с gpx-файлами:

		# Конвертируем csv в osm и отправляем на почту:
		echo "`date +%Y.%m.%d-%T`: Конвертируем ${gpx}.csv -> ${gpx}.osm" >> ${log}
		echo "`date +%Y.%m.%d-%T`: \"${csv2osm}\" -i \"${gpx}.csv\" -o \"${gpx}.osm\" 2>\"${csv2osm_error_log}\"" >> ${log}
		#cat "${gpx}.csv" | /home/postgres/bin/csv2osm > "${gpx}.osm" 2>"${csv2osm_error_log}"
		"${csv2osm}" -i "${gpx}.csv" -o "${gpx}.osm" 2>"${csv2osm_error_log}"

		if [ ! 0 -eq $? ]
		then
			# Ошибка конвертера!
			echo "`date +%Y.%m.%d-%T`: ERROR: ошибка конвертирования файла '${gpx}.csv' в '${gpx}.osm' с помощью '${csv2osm}'. Перемещаю исходное письмо в директорию ${error_maildir}." >> ${log}

			# Отправляем админу уведомление об ошибке обработки:
			subj="ОШИБКА конвертирования файла '${gpx}.csv' в '${gpx}.osm' с помощью ${csv2osm} !"
			base64_name="=?utf-8?b?`echo ${gpx}|base64 -w 0`?="
			/scripts/gps/sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -a "${gpx}" -n "${base64_name}" -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Скрипт не смог сконвертировать csv-файл: ${gpx}.csv в osm-файл: ${gpx}.osm с помощью ${csv2osm}
Ошибка системы. Письмо с данными переместил в директорию с ошибками:
${error_maildir}/${mail}

Файл gpx, который не смог сконвертировать скрипт находится во вложении.

Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}
			
			# Отправляем пользователю уведомление об ошибке обработки:
			subj="ОШИБКА обработки файла '${gpx}'!"
			base64_name="=?utf-8?b?`echo ${gpx}|base64 -w 0`?="
			/scripts/gps/sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_from} -a "${gpx}" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Система не смогла обработать gpx-файл ${gpx}. Скорее всего файл некорректен. Проверьте, открывается ли он в qlandkartegt:
Скачать можно тут: https://bitbucket.org/kiozen/qlandkarte-gt/downloads
Если не открывается - исправьте файл gpx и после успешного открытия в qlandkartegt отправьте его повторно.

Возможно это ошибка системы. Системные администраторы УЖЕ уведомлены.
" &>> ${log}

			# Перемещаем письмо в ошибки:
			cd ${maildir}
			echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
			mv ${mail} ${error_maildir} -v &>> ${log}
			
			continue
		fi
		# Отправляем каждый osm файл во вложении письма:
		# По поводу кодировки в теме письма и в отправителе смотреть тут: http://webmasterschool.ru/articles/article59.php
		base64_name="=?utf-8?b?`echo ${gpx}.osm|base64 -w 0`?="
		echo "`date +%Y.%m.%d-%T`: base64_name=${base64_name}" >> ${log}
		subj="Данные для JOSM. На основе: ${gpx}. Сконвертированные GPS/ГЛОНАСС точки опор и подстанций в формате osm для импорта с помощью JOSM"

		# Патченный sendEmail -o tls=no (для обхода бага именами вложений в utf8):
		echo "`date +%Y.%m.%d-%T`: /scripts/gps/sendEmail -o tls=no -f ${email_from} -t ${email_osm_to} -a ${gpx}.osm, Тема: ${subj}" >> ${log}
		/scripts/gps/sendEmail -o tls=no -f "${email_from}" -o message-charset=utf-8 -t "${email_osm_to}" -a "${gpx}.osm" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
-m "Письмо автоматически сгенерировано скриптом $0 на хосте `hostname`.
Во вложении находятся osm-файл, содержащий ГЕО-данные для импорта на сервер OSM с помощью JOSM. 
Открывать программой JOSM. ( http://josm.ru ) 
По вопросам редактирования и настройки обращаться по электронной почте: semenov@rsprim.ru
Либо по телефону: 43-49.
Изначальные данные были получены в формате gpx по почте от ${email_from}
" &>> ${log}

		if [[ 0 != "$?" ]]
		then
			echo "`date +%Y.%m.%d-%T`: ERROR: письмо с osm-файлами не смог отправить получателю ${email_osm_to}. Перемещаю исходное письмо в директорию ${error_maildir}." >> ${log}

			# Перемещаем письмо в ошибки:
			cd ${maildir}
			echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
			mv ${mail} ${error_maildir} -v &>> ${log}
			
			# Отправляем админу уведомление об ошибке обработки:
			sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки OSM-данных!'|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Скрипт не смог отправить письмо с osm-файлом: ${gpx}.osm пользователю(ам): ${email_osm_to} 
Ошибка системы. Письмо с данными переместил в директорию с ошибками:
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}
			continue
		fi
		# Отправляем каждый gpx файл во вложении письма дополнительно Долганину:
		# По поводу кодировки в теме письма и в отправителе смотреть тут: http://webmasterschool.ru/articles/article59.php
		base64_name="=?utf-8?b?`echo ${gpx}|base64 -w 0`?="
		echo "`date +%Y.%m.%d-%T`: base64_name=${base64_name}" >> ${log}
		subj="Данные GPX по опорам и линиям: '${gpx}'"

		# Патченный sendEmail -o tls=no (для обхода бага именами вложений в utf8):
		echo "`date +%Y.%m.%d-%T`: /scripts/gps/sendEmail -o tls=no -f ${email_from} -t ${email_osm_to} -a ${gpx}, Тема: ${subj}" >> ${log}
		/scripts/gps/sendEmail -o tls=no -f "${email_from}" -o message-charset=utf-8 -t "${email_osm_to}" -a "${gpx}" -n "${base64_name}" -s ${email_server} -u "=?utf-8?b?`echo ${subj}|base64 -w 0`?=" \
-m "Письмо автоматически сгенерировано скриптом $0 на хосте `hostname`.
Во вложении находятся gpx-файл, содержащий ГЕО-данные опор, ТП, или подстанций. 
Открывать программой qlandkartegt.
По вопросам редактирования и настройки обращаться по электронной почте: semenov@rsprim.ru
Либо по телефону: 43-49.
Изначальные данные были получены в формате gpx по почте от ${email_from}
" &>> ${log}

		if [[ 0 != "$?" ]]
		then
			echo "`date +%Y.%m.%d-%T`: ERROR: письмо с gpx-файлом не смог отправить получателю ${email_osm_to}. Перемещаю исходное письмо в директорию ${error_maildir}." >> ${log}

			# Перемещаем письмо в ошибки:
			cd ${maildir}
			echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в директорию с ошибками:" >> ${log}
			mv ${mail} ${error_maildir} -v &>> ${log}
			
			# Отправляем админу уведомление об ошибке обработки:
			sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t ${email_admin} -s ${email_server} -u "=?utf-8?b?`echo 'ОШИБКА отправки GPX-данных!'|base64 -w 0`?=" \
			-m "Письмо автоматически сгенерировано системой.
	Скрипт не смог отправить письмо с gpx-файлом: ${gpx} пользователю(ам): ${email_osm_to} 
Ошибка системы. Письмо с данными переместил в директорию с ошибками:
${error_maildir}/${mail}
Для более точной информации смотрите лог-файл: ${log} на сервере $HOSTNAME

Последние 30 строк лога:
`tail -n 30 ${log}`
" &>> ${log}
			continue
		fi

		# Отправляем уведомление пользователю об успешной обработке файла:
		subj="Успешно обработан файл с GPS-данными '${gpx}'"
		echo "`date +%Y.%m.%d-%T`: sendEmail -o tls=no -f ${system_email_from} -t ${email_from}, Тема: ${subj}" >> ${log}
		sendEmail -o tls=no -f ${system_email_from} -o message-charset=utf-8 -t "${email_from}" -s ${email_server} -u "=?utf-8?b?`echo "${subj}"|base64 -w 0`?=" \
	-m "Письмо автоматически сгенерировано системой.
Вы отправили письмо на адрес ${system_email_from} С GPS-данными.

Файл ${gpx} успешно обработан и отправлен руководству.
" &>> ${log}

		# Дополнительная обработка текущего gpx-файла: ${gpx}
		#
		#

	done

	# Перемещаем письмо в бэкапы:
	cd ${maildir}
	echo "`date +%Y.%m.%d-%T`: Перемещаем письмо в бэкапы:" >> ${log}
	mv ${mail} ${backup_maildir} -v &>> ${log}

done

